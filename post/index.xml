<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tyler Mumford</title>
    <link>http://tylermumford.com/post/index.xml</link>
    <description>Recent content in Posts on Tyler Mumford</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Aug 2017 23:58:00 -0700</lastBuildDate>
    <atom:link href="http://tylermumford.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using Go</title>
      <link>http://tylermumford.com/post/using-go/</link>
      <pubDate>Tue, 01 Aug 2017 23:58:00 -0700</pubDate>
      
      <guid>http://tylermumford.com/post/using-go/</guid>
      <description>

&lt;p&gt;I chose to learn Go during my Programming Languages course in college, when we were told to find a new language to learn. I was tired of the chaos of JavaScript and PHP, and I was drawn to the idea of non-OO, statically typed code without manual memory management. While I haven&amp;rsquo;t built anything professional-grade with Go yet, I have used it to begin building two sites (one of which works! ;), and I love it.&lt;/p&gt;

&lt;p&gt;Even though I don&amp;rsquo;t have a lot of experience with Go, I feel confident in my ability to use the language well. And even though I haven&amp;rsquo;t finished these side projects, I do finish the work I get paid for.&lt;/p&gt;

&lt;h2 id=&#34;what-i-ve-done&#34;&gt;What I&amp;rsquo;ve Done&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Meal Picker (not working)&lt;br /&gt;
This is a tiny project I started to help my wife and I choose what to eat. It was some of the first Go code I wrote, and I tried to do it without depending on a database, so it stores data in CSV files. When I pick it up again, I think I want to use &lt;a href=&#34;https://github.com/boltdb/bolt&#34;&gt;Bolt&lt;/a&gt; instead.&lt;/li&gt;
&lt;li&gt;SAVvie (working, but not finished)&lt;br /&gt;
This was a group project that I made with fellow students. We each wanted to use a different language, so it&amp;rsquo;s not an example of how I&amp;rsquo;d structure a production service! But I did do a (to my mind) substantial amount of work in Go, and the site&amp;rsquo;s basic functionality is usable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-i-still-want-to-do&#34;&gt;What I Still Want to Do&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Work on a large Go codebase&lt;br /&gt;
Go is so easy to read and work with. I&amp;rsquo;m looking forward to the day when I can really use this language in a big project.&lt;/li&gt;
&lt;li&gt;Port Space Trader to Go&lt;br /&gt;
Back in the day, I used to absolutely love playing the game &lt;a href=&#34;http://www.spronck.net/spacetrader/STFrames.html&#34;&gt;Space Trader&lt;/a&gt; on my Palm Pilot. I want to bring it back with modern ports for some combination of desktop, web, and mobile, and I think I want to do it in Go.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>On CSS Polyfills</title>
      <link>http://tylermumford.com/post/on-css-polyfills/</link>
      <pubDate>Fri, 23 Dec 2016 15:41:54 -0700</pubDate>
      
      <guid>http://tylermumford.com/post/on-css-polyfills/</guid>
      <description>&lt;p&gt;I want to respond to &amp;ldquo;&lt;a href=&#34;https://philipwalton.com/articles/the-dark-side-of-polyfilling-css/&#34;&gt;The Dark Side of Polyfilling CSS&lt;/a&gt;&amp;rdquo; by Philip Walton. At the end of the article is this hashtag:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;#makecssfatigueathing&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I disagree completely. Putting aside the fact that the word &amp;ldquo;fatigue&amp;rdquo; has only negative connotations, CSS is already different enough between browsers. If a CSS snippet&amp;rsquo;s meaning can be changed at will by JavaScript, then:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There will be more code in the rendering pipeline, and therefore more bugs&lt;/li&gt;
&lt;li&gt;Scripts can change the meaning of &lt;em&gt;valid&lt;/em&gt; CSS, interfering with the CSS author&amp;rsquo;s expectations and intentions&lt;/li&gt;
&lt;li&gt;Browser vendors can justify ignoring niche new features because the JS community will already have an implementation&lt;/li&gt;
&lt;li&gt;More JS has to be included in the page (yes, less than a polyfill, but a nonzero amount nonetheless)&lt;/li&gt;
&lt;li&gt;Instead of being processed by compiled and (hopefully) well-tested code, CSS will have to rely on JS &amp;ndash; let that sink in.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Where does it end?? I strongly believe in the separation of concerns, and in using the right tool for the job. At what point does an application just ignore HTML/CSS and run entirely in JavaScript? (Yes, I&amp;rsquo;m sure it&amp;rsquo;s already being done.) You might as well ship a desktop app if you&amp;rsquo;re just using the browser as an execution environment.&lt;/p&gt;

&lt;p&gt;The difficulty of polyfilling CSS should convince developers to write simple, backwards-compatible, and extensible CSS; not to make it more complicated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inaugural Entry</title>
      <link>http://tylermumford.com/post/inaugural-entry/</link>
      <pubDate>Thu, 13 Jun 2013 17:00:00 -0700</pubDate>
      
      <guid>http://tylermumford.com/post/inaugural-entry/</guid>
      <description>&lt;p&gt;Three days ago, Apple gave its 2013 WWDC keynote presentation. They announced OS X Mavericks, the new Mac Pro, and a new design for iOS 7. I&amp;rsquo;m taking the opportunity to move my own development efforts forward, by creating Mindful Code. Under this name, I intend to create apps for iOS and Mac that truly understand how people think of and interact with their systems.&lt;/p&gt;

&lt;p&gt;The definition of &amp;ldquo;mindful&amp;rdquo; has nothing to do with beauty, versatility, or even ease of use. To be mindful is to be aware of truth, and to respect it. Only when software is mindful of its users can it become an extension of their thinking. And then? &lt;em&gt;Then&lt;/em&gt; it becomes beautiful.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>